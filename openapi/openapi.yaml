openapi: 3.0.3
info:
  title: hackathon24spring02-data-server
  version: 1.0.0
  description: ハッカソンで作るオンラインゲーム用の、AIへのリクエストやプレイヤーの統計情報などを管理するAPIサーバー
  contact:
    name: pikachu0310
    url: 'https://github.com/pikachu0310/hackathon24spring02-data-server'
servers:
  - url: 'http://localhost:8080/api'
    description: ローカル環境
  - url: 'https://YOUR_PRODUCTION_URL'
    description: 本番環境
tags:
  - name: items
    description: アイテムAPI
paths:
  /ping:
    get:
      summary: サーバーの生存確認
      operationId: pingServer
      responses:
        '200':
          description: Pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
  /test:
    get:
      summary: テスト用
      operationId: test
      responses:
        '200':
          description: OK

  /items/{itemId}:
    get:
      summary: アイテムを取得
      operationId: getItem
      tags:
        - items
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: string
            format: uuid
          description: アイテムID
      responses:
        '200':
          description: 成功 - アイテム取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not Found

  /items/combine:
    post:
      summary: アイテムを合成
      operationId: combineItems
      tags:
        - items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId1:
                  type: string
                  format: uuid
                  description: 合成する最初のアイテムID
                itemId2:
                  type: string
                  format: uuid
                  description: 合成する二番目のアイテムID
      responses:
        '200':
          description: 成功 - 合成アイテム取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not Found

  /items/parameters:
    post:
      summary: アイテムとパラメーターを取得
      operationId: getItemWithParameters
      tags:
        - items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  format: uuid
                  description: アイテムID
                parameters:
                  type: object
                  properties:
                    HP:
                      type: integer
                      description: ヒットポイント
                    攻撃力:
                      type: integer
                      description: 攻撃力
                    防御力:
                      type: integer
                      description: 防御力
      responses:
        '200':
          description: 成功 - アイテムとパラメーター取得
          content:
            application/json:
              schema:
                type: object
                properties:
                  parameters:
                    type: object
                    properties:
                      HP:
                        type: integer
                        description: ヒットポイント
                      攻撃力:
                        type: integer
                        description: 攻撃力
                      防御力:
                        type: integer
                        description: 防御力
        '404':
          description: Not Found

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: アイテムID
        name:
          type: string
          description: アイテムの名前
        description:
          type: string
          description: アイテムのフレーバーテキスト
        attribute:
          type: integer
          description: アイテムの属性 (1~6の整数)
        rarity:
          type: number
          format: float
          description: 強さ度合い(レア度) (0~1の数字)
      required:
        - id
        - name
        - description
        - attribute
        - rarity
